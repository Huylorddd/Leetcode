int removeDuplicates(int* nums, int numsSize) {
    if (numsSize == 0) return 0;

// we create 'k' that stand for the 'REPLACE POSITION'.
// The first character is always the unique/ That's why we set [the position = 1] (i and k)
// Every iteration:    i
//    Original Array: [0][1][2][2][3][3]
//    Replaced Array: [0][1][2][3][_][_]
//                     k

// Because the array is non-descending order, if "the value at the position i" (arr[i]) is not the same the before (arr[i-1]) like 0 and 1, then "the value at the position k" (arr[k]) in the replaced array is set to the unique
// and increase the position at the replaced array (k + 1), then continue the iteration until the limit of the orginal array.

    int i,k = 1;
    for (i = 1; i < numsSize; i++) {
        if (nums[i] != nums[i-1]) {
            nums[k] = nums[i];
            k++;
        }
    }

    return k;
}
