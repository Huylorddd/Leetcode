/**
    * Definition for singly-linked list.
    * struct ListNode {
    *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* dummy = (struct ListNode*)malloc(sizeof(struct ListNode));      // create a dummy pointer that points to the the value in l1 and l2.
    dummy->val = 0;
    dummy->next = NULL;

    struct ListNode* current = dummy;
    int carry = 0;                                                                   // in case the sum of 2 values more than 10, that's why we need to add the 'carry'.

    while (l1 || l2 || carry) {                                                      // the func will sum the values till 1 of 2 lists is empty or the carry is still.
        int total = carry;
        if (l1) {
            total += l1->val;
            l1 = l1->next;
        }
        if (l2) {
            total += l2->val;
            l2 = l2->next;
        }

        carry = total / 10;
        current->next = (struct ListNode*)malloc(sizeof(struct ListNode));
        current = current->next;
        current->val = total % 10;
        current->next = NULL;
    }

    struct ListNode* result = dummy->next;
    free(dummy);
    return result;
}
